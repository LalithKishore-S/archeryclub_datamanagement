CREATE TABLE PLAYER(
   AID VARCHAR(5),
   NAME VARCHAR(50),
   DOB DATE,
   GENDER CHAR(1),
   PHONENO NUMBER,
   ADDRESS VARCHAR(100),
   CATEGORY VARCHAR(20),
   CONSTRAINT P_AID PRIMARY KEY(AID),
   CONSTRAINT CHECK_AID CHECK(AID LIKE 'A%'),
   CONSTRAINT CHECK_GENDER CHECK(GENDER IN ('M','F','T')),
   CONSTRAINT CHECK_CATEGORY CHECK(CATEGORY IN ('recurve','compound','indian'))
);

CREATE TABLE PRACTICE(
   AID VARCHAR(5),
   DOP DATE,
   DISTANCE NUMERIC,
   VOLUME_FLAG NUMERIC(1),
   NO_ARROWS NUMERIC,
   SCORING_FLAG NUMERIC(1),
   AGG_SCORE NUMERIC,
   OUT_OF NUMERIC,
   CONSTRAINT F_KEY_AID_PRACTICE FOREIGN KEY(AID) REFERENCES PLAYER(AID),
   CONSTRAINT COMPOSITE_PRACTICE PRIMARY KEY(AID,DOP),
   CONSTRAINT CHECK_OUTOF CHECK(OUT_OF>=AGG_SCORE AND MOD(OUT_OF,360)=0),
   CONSTRAINT CHECK_BOOL CHECK(VOLUME_FLAG IN (0,1) AND SCORING_FLAG IN (0,1))
);

CREATE TABLE MATCH(
   MATCH_NAME VARCHAR(100),
   DOM DATE,
   CONSTRAINT PKEY_MATCH PRIMARY KEY(MATCH_NAME)
);

CREATE TABLE ATTENDS(
   AID VARCHAR(5),
   MATCH_NAME VARCHAR(100),
   AGG_SCORE NUMBER,
   OUT_OF NUMBER,
   RANK NUMBER,
   CONSTRAINT F_KEY_AID_ATTENDS FOREIGN KEY(AID) REFERENCES PLAYER(AID),
   CONSTRAINT F_KEY_MATCHNAME_ATTENDS FOREIGN KEY(MATCH_NAME) REFERENCES MATCH(MATCH_NAME),
   CONSTRAINT COMPOSITE_ATTENDS PRIMARY KEY(AID,MATCH_NAME),
   CONSTRAINT CHECK_OUTOF_ATTENDS CHECK(OUT_OF>=AGG_SCORE AND MOD(OUT_OF,360)=0)
);

CREATE TABLE TRAINPROT (
    RESULT CHAR(1),
    MON VARCHAR(100),
    TUES VARCHAR(100),
    WED VARCHAR(100),
    THURS VARCHAR(100),
    FRI VARCHAR(100),
    SAT VARCHAR(100),
    SUN VARCHAR(100),
    CONSTRAINT P_KEY_TRAINPROT PRIMARY KEY(RESULT),
    CONSTRAINT CHECK_RESULT CHECK(RESULT IN ('B','I','P'))
);

CREATE TABLE FITNESSTEST(
   AID VARCHAR(5),
   NO_SQUATS NUMBER,
   NO_BURPEES NUMBER,
   RUNTIME NUMBER,
   RESULT CHAR(1),
   CONSTRAINT F_KEY_AID_FITNESSTEST FOREIGN KEY(AID) REFERENCES PLAYER(AID),
   CONSTRAINT F_KEY_RESULT_FITNESSTEST FOREIGN KEY(RESULT) REFERENCES TRAINPROT(RESULT),
   CONSTRAINT COMPOSITE_FITNESSTEST PRIMARY KEY(AID,RESULT)
);

INSERT INTO PLAYER VALUES('&AID','&NAME','&DOB','&GENDER',&PHONENO,'&ADDRESS','&CATEGORY');
INSERT INTO PRACTICE VALUES('&AID','&DOP',&DISTANCE,&VOLUME_FLAG,&NO_ARROWS,&SCORING_FLAG,&AGG_SCORE,&OUT_OF);
INSERT INTO MATCH VALUES('&MATCH_NAME','&DOM');
INSERT INTO ATTENDS VALUES('&AID','&MATCH_NAME',&AGG_SCORE,&OUT_OF,&RANK);
INSERT INTO FITNESSTEST VALUES('&AID',&NO_SQUATS,&NO_BURPEES,&RUNTIME,'&RESULT');
INSERT INTO TRAINPROT VALUES('&RESULT','&MON','&TUES','&WED','&THURS','&FRI','&SAT','&SUN');

CREATE TABLE AUDIT_PRACTICE(
   AID VARCHAR(5),
   NAME VARCHAR(50),
   DOP DATE,
   DOC DATE,
   OPERATION VARCHAR(20),
   CONSTRAINT F_KEY_AID_AUDIT FOREIGN KEY(AID) REFERENCES PLAYER(AID) ON DELETE CASCADE
);
DROP TABLE AUDIT_PRACTICE;
CREATE OR REPLACE TRIGGER AUDIT_PRAC AFTER INSERT OR UPDATE ON PRACTICE
FOR EACH ROW
ENABLE
DECLARE
   CURR_DATE DATE;
   NAME1 PLAYER.NAME%TYPE;
BEGIN
   SELECT SYSDATE INTO CURR_DATE FROM DUAL;
   SELECT NAME INTO NAME1 FROM PLAYER WHERE AID=:NEW.AID;
   IF INSERTING
   THEN
      INSERT INTO AUDIT_PRACTICE VALUES(:NEW.AID,NAME1,:NEW.DOP,CURR_DATE,'INSERT');
   ELSIF UPDATING 
   THEN
      INSERT INTO AUDIT_PRACTICE VALUES(:NEW.AID,NAME1,:NEW.DOP,CURR_DATE,'UPDATE');
   END IF;
END;
/